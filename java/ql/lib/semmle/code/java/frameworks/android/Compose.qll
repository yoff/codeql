/**
 * Provides classes and predicates for working with components generated by the Android's Jetpack Compose compiler.
 */

import java

/**
 * A call to a live literal method.
 * This always returns a constant expression and can be considered as such.
 */
class LiveLiteral extends MethodAccess {
  LiveLiteral() {
    this.getMethod() instanceof LiveLiteralMethod and
    not this.getEnclosingCallable() instanceof LiveLiteralMethod
  }

  /** Gets the constant value that backs this live literal. */
  CompileTimeConstantExpr getValue() {
    result =
      any(ReturnStmt r | this.getMethod().calls*(r.getEnclosingCallable()))
          .getResult()
          .(VarAccess)
          .getVariable()
          .getInitializer()
  }

  override string toString() { result = this.getValue().toString() }
}

/** A live literal method. */
class LiveLiteralMethod extends Method {
  LiveLiteralMethod() { this.getDeclaringType().getName().matches("LiveLiterals$%") }
}
